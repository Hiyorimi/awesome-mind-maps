<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simplemind-mindmaps>

<simplemind-mindmaps doc-version="3" generator="SimpleMindOSXN" gen-version="1.18.0">
    <mindmap>
        <meta>
            <guid guid="74EFD2185C06518F49777E99"></guid>
            <title text="Мифический человеко-месяц или\Nкак создаются программные\Nсистемы, Фредерик Брукс"></title>
            <style key="system.bright-palette"></style>
            <auto-numbering style="disabled"></auto-numbering>
            <scrollstate zoom="34" x="-849.52" y="-237.90"></scrollstate>
            <selection guid="UccuWWjTeSoECfleH3F5zw" type="node" id="74"></selection>
            <main-centraltheme id="0"></main-centraltheme>
        </meta>
        <topics>
            <topic id="0" parent="-1" guid="YeLZyyxJ82UH3OfKVDx3Nw" x="0.00" y="1000.43" palette="1" colorinfo="1" text="Мифический человеко-месяц или\Nкак создаются программные\Nсистемы, Фредерик Брукс"></topic>
            <topic id="1" parent="0" guid="Azx1bytOkFMbHuSrVqHvHg" x="-1951.80" y="-1196.40" palette="2" colorinfo="2" text="Глава 17 Новый выстрел\N«Серебряной пули нет»"></topic>
            <topic id="2" parent="1" x="-2619.49" y="-2317.91" text="Мой опыт показывает, что все сложности, с которыми\Nсталкиваются при разработке систем, являются\Nпризнаками организационных неполадок. Попытка\Nмоделирования практической деятельности программами\Nсоответствующей сложности влечет сохранение\Nнеразберихи вместо решения проблем."></topic>
            <topic id="3" parent="1" x="-2655.81" y="-2206.87" text="Практически отсутствует теорема\Nсуществования для повторного использования.\NВремя подтвердило, что сделать вещи\Nповторно используемыми стоит дорого."></topic>
            <topic id="4" parent="1" x="-2582.34" y="-2062.92" text="Я вполне разделяю его энтузиазм по поводу использования\Nдиаграмм как вспомогательного средства при обдумывании и\Nпроектировании. Долгое время я любил задавать кандидатам на\Nработу программистом вопрос: «Где находится следующий\Nноябрь?». Если вопрос кажется загадочным, то в другом виде:\N«Какова ваша мысленная мысленная модель календаря?» У\Nдействительно хороших программистов хорошее чувство\Nпространства, у них обычно есть геометрическая модель времени, и\Nони часто без труда понимают первый вопрос. Их модели очень\Nиндивидуальны."></topic>
            <topic id="5" parent="1" x="-2604.52" y="-1902.51" text="Так что же в итоге сообщили нам Парнас и Брукс? Что\Nразработка программ является концептуально сложным\Nзанятием. Что волшебные решения не лежат за каждым углом.\NЧто занимающимся этим делом пора изучить достижения,\Nимеющие эволюционный характер, а не ждать революцию и\Nне надеяться на нее."></topic>
            <topic id="6" parent="1" x="-2604.39" y="-1775.01" text="Повторное использование — это то, о чем легче говорить, чем\Nосуществить. Для него требуются как хорошее\Nпроектирование, так и очень хорошая документация. Даже\Nкогда мы видим хорошее проектирование, что по-прежнему не\Nчасто, без хорошей документации компоненты не будут\Nиспользоваться повторно."></topic>
            <topic id="7" parent="1" x="-2563.00" y="-1589.91" text="Я хочу придраться к вашему утверждению, что в действительности\Nпакеты не настолько изменились… Я думаю, что вы слишком легко\Nотбросили главные следствия вашего замечания, что (программные\Nпакеты) «могут быть немного более общими и немного лучше\Nнастраиваемыми, чем раньше, но не намного». Даже принимая это\Nзаявление за чистую монету, я полагаю, что пользователи расценивают\Nпакеты, как обладающие более широкими возможностями и легче\Nнастраиваемые, и что такое восприятие делает пользователей более\Nподатливыми перед пакетами. В большинстве случаев, известных моей\Nкомпании, не программисты, а (конечные) пользователи неохотно\Nпользуются пакетами, покскольку думают, что лишатся важных\Nвозможностей и функций, а потому возможность легкой настройки весьма\Nповышает для них привлекательность продукта."></topic>
            <topic id="8" parent="1" x="-2581.41" y="-1371.90" text="Каперс Джонс (Capers Jones) сначала в серии служебных записок, а\Nзатем в отдельной книге демонстрирует глубокую интуицию,\Nотмеченную несколькими моими корреспондентами. «Статья «СПН»,\Nкак и многие в то время, сосредоточилась на производительности —\Nвыходе программной продукции на единицу входных затрат», —\Nговорит Джонс. — «Нет, сосредоточьтесь на качестве, а\Nпроизводительность придет следом.» [19] Он утверждает, что\Nдорогостоящие и нарушившие сроки проекты требуют больше всего\Nдополнительных усилий и времени для поиска и устранения ошибок\Nв спецификациях, в проекте, в разработке."></topic>
            <topic id="9" parent="1" x="-2564.52" y="-1137.42" text="Повторное использование кода имеет успех при разработке\Nматематических программ. Причин этому две: 1) это магия, требующая\Nогромного интеллектуального вклада в каждую строчку кода, и 2)\Nсуществует богатая и стандартная терминология, а именно —\Nматематика, для описания функциональности любых компонентов.\NПоэтому повторно разработать математический компонент стоит дорого,\Nа разобраться в функциональности стоит дешево. Давняя традиция\Nпубликации и сбора алгоритмов профессиональными журналами и\Nпредложения их по умеренной цене, а также коммерческое предложение\Nвысококачественных алгоритмов по несколько более высокой, но все же\Nскромной цене, делают поиск требуемых компонентов проще, чем в\Nдругих областях, где часто невозможно точно и сжато описать требуемое.\NБлагодаря совместному действию этих факторов повторное\Nиспользование математических программ более привлекательно, чем\Nповторное их изобретение."></topic>
            <topic id="10" parent="0" guid="RRRADgnbGnoMfN2WVUnxuQ" x="-764.09" y="2415.13" palette="3" colorinfo="3" text="Глава 10\NДокументарная\Nгипотеза"></topic>
            <topic id="11" parent="10" guid="Z_2TWl_UidkkrJt2ItP8XQ" x="-1117.70" y="2476.13" text="Цели. Здесь описывается, какие потребности нужно\Nудовлетворить, а также задачи, пожелания, ограничения и\Nприоритеты. Спецификации. Это руководство по компьютеру\Nплюс спецификации технических характеристик. Это один из\Nпервых документов, составляемых для нового продукта, и\Nзавершается он последним."></topic>
            <topic id="12" parent="10" guid="bpK9whEwCx0IfbnpNzq5oA" x="-1083.30" y="2638.86" text="Гипотеза: Среди моря бумаг несколько документов\Nстановятся критически важными осями, вокруг которых\Nвращается все управление проектом. Они являются\Nглавными личными инструментами менеджера."></topic>
            <topic id="13" parent="10" guid="UdbXwilPG4NSux7VVSr2Aw" x="-740.53" y="2527.05" text="Документы для\Nпрограммного проекта"></topic>
            <topic id="14" parent="13" guid="ZgOtWAZfBikzTrBSVjr_Jg" x="-625.38" y="3073.94" text="Что: цели. Здесь определяется, какие потребности должны быть\Nудовлетворены, а также задачи, пожелания, ограничения и приоритеты. Что:\Nспецификации продукта. Начинается как предложение, а кончается как\Nруководство и внутренняя документация. Важнейшей частью являются\Nспецификации скорости и памяти. Когда: график. По какой цене: бюджет. Где:\Nрасположение помещений. Кто: организационная структура. Она\Nпереплетается со спецификацией интерфейса, как предсказывает закон\NКонвея: «Организации, проектирующие системы, неизбежно производят\Nсистемы, являющиеся копиями их организационных структур». [1] Конвей\Nидет дальше и указывает, что организационная структура первоначально\Nотражает проект первой системы, который наверняка был ошибочным. Если\Nпроект системы должен допускать внесение изменений, то и организация\Nдолжна быть готова к переменам."></topic>
            <topic id="15" parent="10" guid="NdrTHFEnxP8pz8g0YNTO2g" x="-830.40" y="2743.36" text="Несмотря на огромные различия в целях и деятельности,\Nкритическое множество для председателя факультета в\Nуниверситете составляет сходное число сходных документов. Почти\Nкаждое решение декана, совета кафедры или председателя\Nявляется спецификацией или изменением следующих документов:\NЦели. Описание курса. Требования к соискателю степени.\NПредложения по исследовательской работе (и планы, при наличии\Nфинансирования). Расписание занятий и назначение\Nпреподавателей. Бюджет. Помещения. Назначение руководителей\Nдля аспирантов."></topic>
            <topic id="16" parent="10" guid="UTNCskoHonU5qjscRAgbOw" x="-318.67" y="2584.19" text="График. Бюджет. Это не просто ограничение, но один из наиболее\Nполезных менеджеру документов. Наличие бюджета заставляет\Nосуществлять технические решения, которых старались бы\Nизбежать, и, что еще важнее, служит выполнению и разъяснению\Nстратегических решений. Организационная структура.\NПространственное расположение. Оценка, прогноз, цены. Они\Nнаходятся в циклической взаимосвязи, что определяет успех или\Nпровал проекта:"></topic>
            <topic id="17" parent="0" guid="WTJ7t376M3tf3JqrBlW67g" x="-1587.50" y="947.94" palette="4" colorinfo="4" text="Глава 14\NНазревание\Nкатастрофы"></topic>
            <topic id="18" parent="17" x="-2273.18" y="695.53" text="Четко различимые вехи в действительности создают удобство\Nкоманде, которая должна рассчитывать, что менеджер их хорошо\Nопределит. С неясно видимой вехой жизнь становится труднее. Это\Nуже не веха, а мельничный камень, перетирающий боевой дух,\Nпоскольку она вводит в заблуждение относительно потерь\Nвремени, пока они не станут непоправимыми. А хроническое\Nотставание от графика угнетающе действует на моральное\Nсостояние."></topic>
            <topic id="19" parent="17" x="-2297.30" y="847.71" text="Тем не менее необходимо иметь способ узнать истинное\Nположение дел независимо от наличия стремления к\Nсотрудничеству. Основой такого изучения служит диаграмма\NПЕРТ с часто расположенными вехами. В большом проекте\Nможно потребовать еженедельного изучения какой-либо\Nчасти ее, рассматривая всю диаграмму раз в месяц или\Nоколо того."></topic>
            <topic id="20" parent="17" x="-2398.83" y="958.75" text="Как оказывается, что проект\Nзапаздывает на год? … Сначала\Nзапаздывает на один день."></topic>
            <topic id="21" parent="17" x="-2288.32" y="1069.79" text="Напротив, вехи должны быть 100-процентными событиями.\N«Спецификации подписаны архитекторами и разработчиками»,\N«исходный код готов на 100 процентов, отперфорирован и\Nзагружен в библиотеку на диске», «отлаженная версия прошла\Nвсе контрольные примеры». Такие конкретные вехи\Nразграничивают расплывчатые этапы планирования,\Nкодирования и отладки."></topic>
            <topic id="22" parent="17" x="-2284.90" y="1213.74" text="Для успешного завершения проекта это значительно лучше, чем\Nесли бы они непосредственно занимались разработкой\Nпрограммных продуктов, так как группа планирования и\Nконтроля стоит на страже того, чтобы неощутимые задержки\Nстали видимыми, и сигнализирует о критических положениях.\NЭто система раннего обнаружения потери года, происходящей\Nдень за днем."></topic>
            <topic id="23" parent="0" guid="TkjTVA4n7A8FuSlcf-UxoQ" x="199.95" y="-607.32" palette="5" colorinfo="5" text="Глава 1\NСмоляная\Nяма"></topic>
            <topic id="24" parent="23" guid="KtNUiTnpx_VUI1z-OyekDg" x="197.01" y="-752.00" text="Во-первых, это просто радость, получаемая при создании чего-либо\Nсвоими руками. Как ребенок радуется, делая куличики из песка, так и\Nвзрослый получает удовольствие, создавая какие-либо вещи,\Nособенно если сам их и придумал. Я думаю, что этот восторг —\Nотражение восторга Господа, творящего мир, восторга,\Nпроявляющегося в индивидуальности и новизне каждого листочка и\Nкаждой снежинки."></topic>
            <topic id="25" parent="23" guid="UthpV0KtUZtrulX-YuxA9A" x="475.31" y="-978.35" text="В-третьих, это очарование создания сложных головоломных\Nобъектов, состоящих из взаимодействующих движущихся\Nчастей и наблюдения за их работой, круг за кругом\Nдемонстрирующей результаты изначально заложенных\Nпринципов. Компьютер с работающей на нем программой\Nобладает доведенным до высшего предела очарованием\Nигорного или музыкального автомата."></topic>
            <topic id="26" parent="23" guid="UVCz7x5uRCUWb0IvB-prxQ" x="722.38" y="-705.41" text="В-четвертых, это радость, получаемая от неизменного\Nузнавания нового, проистекающего из неповторимой\Nприроды задачи. В том или ином отношении задача всегда\Nставится по-новому, и тот, кто ее решает, получает новые\Nзнания — либо практические, либо теоретические, либо те\Nи другие вместе."></topic>
            <topic id="27" parent="0" guid="ID5ia3clNjogGW23AiE8Ng" x="833.00" y="-185.55" palette="6" colorinfo="6" text="Глава 2 Этот мифический\N«человеко-месяц»"></topic>
            <topic id="28" parent="27" guid="J3_luVtbaXVuRP6TRD8QrA" x="1099.77" y="-561.89" text="Программист осуществляет свои построения на основе\Nчистого мышления — понятий и очень гибких их\Nпредставлений. Поскольку материал столь податлив, мы не\Nожидаем трудностей при реализации, отсюда и наш глубокий\Nоптимизм. Из-за ошибочности наших идей возникают\Nошибки в программах. Следовательно, наш оптимизм не\Nимеет оправдания."></topic>
            <topic id="29" parent="27" x="1214.16" y="-442.62" text="Дороти Сэйерс (Dorothy Cayers) в своей превосходной\Nкниге «Разум творца» (“The Mind of the Maker”) выделяет\Nв творческой деятельности три стадии: замысел,\Nреализацию, взаимодействие."></topic>
            <topic id="30" parent="27" x="1275.39" y="-273.98" text="В течение ряда лет при планировании разработки программного\Nобеспечения я пользуюсь следующим эмпирическим правилом: 1/3 —\Nпланирование, 1/6 — написание программ, 1/4 — тестирование\Nкомпонентов и предварительное системное тестирование, 1/4 —\Nсистемное тестирование при наличии всех компонентов. Это правило\Nимеет несколько важных различий с общепринятым планированием: 1.\NНа планирование отводится больше времени, чем обычно. И все равно\Nэтого времени едва достаточно для разработки подробных и надежных\Nтехнических условий и недостаточно для проведения исследовательских\Nработ или поиска новейших технологий. 2. Половина графика работ,\Nотведенная на отладку законченного кода, значительно выше нормы. 3.\NТа часть, которую легко оценить, т.е. написание кода, занимает всего одну\Nшестую общего времени."></topic>
            <topic id="31" parent="27" x="1153.76" y="-105.34" text="Крайне упрощая, сформулируем Закон\NБрукса: Если проект не укладывается в\Nсроки, то добавление рабочей силы\Nзадержит его еще больше."></topic>
            <topic id="32" parent="27" x="1233.21" y="13.93" text="Особенно катастрофические последствия может иметь\Nнедостаток времени для системного тестирования. Поскольку\Nзадержка происходит в конечной части графика, никто не\Nподозревает о том, что график находится под угрозой срыва\Nвплоть до дня сдачи продукта. Плохие вести, полученные\Nпоздно и без предупреждения, обескураживают клиентов и\Nменеджеров."></topic>
            <topic id="33" parent="27" x="1262.79" y="174.34" text="С обменом данными дело обстоит хуже. Если все части задания\Nдолжны быть отдельно скоординированы между собой, то затраты\Nвозрастают как n(n-2)/2. Для трех работников требуется втрое больше\Nпопарного общения, чем для двух, для четырех — вшестеро. Если\Nпомимо этого возникает необходимость в совещаниях трех, четырех и\Nт.д. работников для совместного решения вопросов, положение\Nстановится еще хуже. Дополнительные затраты на обмен данными\Nмогут полностью обесценить результат дробления исходной задачи и\Nпривести к положению, описываемому рисунком 2.4."></topic>
            <topic id="34" parent="0" guid="DEjXjXXpRLYkKqawUV0Xmw" x="-1165.34" y="521.01" palette="7" colorinfo="7" text="Глава 15\NОбратная\Nсторона"></topic>
            <topic id="35" parent="34" x="-1638.16" y="154.47" text="Кроме того, нужны более тщательные тесты, которые обычно\Nвыполняются только после модификации программы. Они относятся\Nк трем участкам области входных данных: 1. Основные параметры,\Nпроверяющие главные функции программы на обычно встречаемых\Nданных. 2. Примеры на грани допустимого, проверяющие границы\Nобласти входных данных и убеждающие, что работают наибольшие\Nзначения, наименьшие значения и все допустимые исключения. 3.\NПримеры за границей допустимого, проверяющие границы с обратной\Nстороны и убеждающие, что недопустимые значения вызывают\Nправильные диагностические сообщения."></topic>
            <topic id="36" parent="34" x="-1694.08" y="306.65" text="Как я доказывал, такие языки и системы очень сильно\Nоблегчают жизнь программистов. Поскольку машины\Nсделаны для людей, а не люди для машин, их\Nиспользование оправдано как с экономической точки\Nзрения, так и чисто по-человечески."></topic>
            <topic id="37" parent="34" x="-1673.22" y="425.92" text="Необходимы различные уровни документации: для\Nпользователя, обращающегося к программе от случая к\Nслучаю, для пользователя, который существенно зависит от\Nпрограммы в своей работе, и для пользователя, который\Nдолжен адаптировать программу к изменившемуся\Nокружению или задачам."></topic>
            <topic id="38" parent="34" x="-1627.30" y="619.25" text="1. Назначение. Что является главной функцией программы и причиной ее\Nнаписания? 2. Среда. На каких машинах, аппаратных конфигурациях и\Nконфигурациях операционной системы будет она работать? 3. Область\Nопределения и область значений. Каковы допустимые значения входных\Nданных? Какие правильные значения выходных результатов могут\Nпоявиться? 4. Реализованные функции и использованные алгоритмы.\NЧто конкретно может делать программа? 5. Форматы ввода-вывода,\Nточные и полные. 6. Инструкция по работе, в том числе описание вывода\Nна консоль и устройство вывода при нормальном и аварийном\Nзавершении. 7. Опции. Какой выбор предоставляется пользователю в\Nотношении функций? Каким образом нужно его задавать? 8. Время\Nработы. Сколько времени занимает решение задачи заданного размера\Nна заданной конфигурации? 9. Точность и проверка. Какова ожидаемая\Nточность результатов? Какие имеются средства проверки точности?"></topic>
            <topic id="39" parent="0" guid="L8Da-BOtiV5S8FlsU2EKoA" x="1084.17" y="1734.10" palette="2" colorinfo="2" text="Глава 6\NДонести\Nслово"></topic>
            <topic id="40" parent="39" x="1364.54" y="1390.68" text="Предлагать задачи и изменения можно всем, но\Nобычно предложения распространяются в\Nписьменном виде до совещания."></topic>
            <topic id="41" parent="39" x="1440.97" y="1501.71" text="Лучший друг менеджера проекта — его постоянный противник,\Nнезависимая организация, тестирующая продукт. Группа проверяет\Nсоответствие машин и продуктов спецификациям и выступает\Nпособником дьявола, указывая на все замеченные дефекты и\Nнесоответствия. Каждой организации, ведущей разработки, нужна\Nтакая независимая группа технического аудита, которая должна быть\Nнеподкупна."></topic>
            <topic id="42" parent="39" x="1439.70" y="1653.90" text="Его подготовка идет кругами, собирая замечания пользователей и\Nразработчиков о недостатках проекта, затрудняющих использование\Nили реализацию. Для удобства разработчиков необходимо\Nквантовать изменения: согласно определенным в графике датам\Nвыпускать очередные версии. Инструкция должна не только\Nописывать все, что видит пользователь, в том числе все\Nинтерфейсы, но и воздерживаться от описания того, чего\Nпользователь не видит."></topic>
            <topic id="43" parent="39" x="1448.65" y="1814.31" text="Новая машина должна была соответствовать имеющейся. Руководство\Nтуманно в некоторых местах? Задайте вопрос машине! Создавалась\Nтестовая программа для выяснения поведения, и новая машина\Nстроилась так, чтобы достигалось соответствие. Программная модель\Nаппаратной или программной системы может использоваться точно\Nтаким же образом. Это — реализация. Она работает. Поэтому все\Nвопросы, связанные с определением, могут быть решены путем\Nпроверки."></topic>
            <topic id="44" parent="39" x="1448.11" y="1974.72" text="Со временем выясняется, что некоторые решения не в полной мере\Nвыполняются. Тот или иной из участников так и не принял всей душой\Nкакую-либо мелочь. Другие решения породили непредвиденные\Nпроблемы, и еженедельное совещание отказывается повторно их\Nрассматривать. Так возникает хвост из мелких возражений, открытых\Nтем или раздражения. Для их урегулирования мы проводим ежегодные\Nсессии верховного суда, обычно продолжающиеся две недели. (Если\Nбы я проводил их сейчас, то делал бы это раз в полгода.)"></topic>
            <topic id="45" parent="39" x="1245.07" y="2085.76" text="Тестирование\Nпродукта"></topic>
            <topic id="46" parent="0" guid="I28pnyf2VYFWXbNuEWkmCg" x="216.87" y="2459.20" palette="3" colorinfo="3" text="Глава 9 Два в одном"></topic>
            <topic id="47" parent="46" guid="a6wyl3L0v68NMGEtdGSDTg" x="409.22" y="2760.81" text="Поскольку размер определяет значительную долю того, во что\Nобходится пользователю системный программный продукт,\Nизготовитель должен планировать размер, контролировать его и\Nразрабатывать технологии, уменьшающие размер, подобно тому,\Nкак изготовитель аппаратной части планирует количество деталей,\Nконтролирует его и разрабатывает методы сокращения количества\Nдеталей. Как и для всякой цены, плох не большой размер как\Nтаковой, а размер, не вызываемый необходимостью."></topic>
            <topic id="48" parent="0" guid="DcXFaF3mRB56ZRobDYokmQ" x="-1224.63" y="1481.12" palette="4" colorinfo="4" text="Глава 13\NЦелое и\Nчасти"></topic>
            <topic id="49" parent="48" x="-1541.19" y="1176.75" text="Бём и Джакопини показывают теоретическую\Nдостаточность таких структур. Дейкстра доказывает, что\Nальтернативное неограниченное применение ветвление с\Nпомощью GO TO образует структуры, располагающие к\Nпоявлению логических ошибок."></topic>
            <topic id="50" parent="48" x="-1538.46" y="1287.79" text="Квантовые изменения хорошо вписываются в\Nтехнологию фиолетовых проводов. Быстрая заплатка\Nдержится до следующей регулярной версии компонента,\Nкоторая должна содержать исправление в отлаженном и\Nдокументированном виде."></topic>
            <topic id="51" parent="48" x="-1519.71" y="1382.37" text="Я духов вызывать могу из бездны. И я могу, и\Nкаждый может, Вопрос лишь, явятся ль на зов они?\NШЕКСПИР, КОРОЛЬ ГЕНРИХ IV"></topic>
            <topic id="52" parent="48" x="-1599.03" y="1518.10" text="Вкратце, метод Вирта определяет разработку как последовательность\Nуточняющих шагов. Набрасывается примерное описание задачи и грубый\Nметод решения, позволяющий получить основной результат. Затем\Nопределение изучается более пристально, чтобы увидеть, в чем отличие\Nполученного результата от требуемого, и крупные этапы решения\Nразбиваются на более мелкие. Каждое уточнение в определении задачи\Nстановится уточнением алгоритма решения и может сопровождаться\Nуточнением представления данных. В этом процессе выявляются модули\Nрешения или данных, дальнейшее уточнение которых может быть\Nпродолжено независимо от основной работы."></topic>
            <topic id="53" parent="48" x="-1605.77" y="1727.88" text="В технических моделях System/360 среди обычных желтых проводов\Nможно было иногда видеть фиолетовые провода. При обнаружении\Nдефекта делались две вещи. Быстро придумывалось исправление и\Nустанавливалось в системе, чтобы продолжить отладку. Это изменение\Nделалось фиолетовыми проводами, так что оно торчало как бельмо на\Nглазу. Изменение регистрировалось в журнале. Тем временем готовился\Nофициальный документ о внесении исправлений, который запускался в\Nжернова автоматизированного проектирования. В итоге это выливалось в\Nизмененные чертежи и списки проводов и новую заднюю панель, в которой\Nизменения были сделаны на печатной плате или желтыми проводами.\NТеперь физическая модель и документация соответствовали друг другу, и\Nфиолетовый провод исчезал."></topic>
            <topic id="54" parent="0" guid="HL8q8hfcgLI5u51uKQgCgA" x="-1623.12" y="-1689.46" palette="5" colorinfo="5" text="Глава 18 Заявления\N«Мифического\Nчеловеко-месяца»: правда\Nили ложь?"></topic>
            <topic id="55" parent="54" guid="EQvmUkn0NRIuGF2qeQl5rA" x="-1688.93" y="-2221.27" text="1.3 В то же время этому занятию присущи и огорчения: • При изучении\Nпрограммирования труднее всего привыкнуть к требованию\Nсовершенства. • Постановка задач осуществляется другими людьми и\Nприходится зависеть от вещей (особенно, программ), которые нельзя\Nконтролировать; полномочия не соответствуют ответственности. •\NСтрашно только на словах: фактическая власть приобретается как\Nследствие успешного выполнения задач. • Программный проект\Nприближается к окончательному виду тем медленнее, чем ближе\Nокончание, хотя кажется, что к концу сходимость должна быть более\Nбыстрой. • Программному продукту грозит устаревание еще до его\Nзавершения."></topic>
            <topic id="56" parent="54" guid="Kci-61LE-SAb3XYJGFt8rQ" x="-2169.23" y="-2405.31" text="13.2 Высоцкий говорит, что «очень многие неудачи\Nсвязаны именно с теми аспектами, которые были не\Nвполне специфицированы»."></topic>
            <topic id="57" parent="54" guid="Y_UEPSRbL_JPljZNNcvcAA" x="-2067.98" y="-2218.80" text="4.2 «Окончательную оценку проекту системы дает отношение\Nфункциональности к сложности концепций», а не только\Nбогатство функций. (Это соотношение является мерой\Nпростоты использования, пригодной как для простого, так и\Nдля сложного использования.)"></topic>
            <topic id="58" parent="54" guid="TapLdiJRVSIK9tIDA4Uekg" x="-1929.38" y="-1961.97" text="1.2 Занятие программированием «отвечает глубокой внутренней\Nпотребности в творчестве и удовлетворяет чувственные потребности,\Nкоторые есть у всех у нас», доставляя пять видов радости: • Радость,\Nполучаемая при создании чего-либо своими руками. • Удовольствие\Nсоздавать вещи, которые могут быть полезны другим людям. •\NОчарование создания сложных головоломных объектов, состоящих из\Nвзаимодействующих движущихся частей. • Радость, получаемая от\Nнеизменного узнавания нового, неповторяемости задачи. •\NУдовольствие от работы со столь податливым материалом — чистой\Nмыслью, который, тем не менее, существует, движется и работает так,\Nкак не могут словесные объекты."></topic>
            <topic id="59" parent="54" guid="c3kaITTGmjdkWe1tWXzHeQ" x="-1491.76" y="-1963.65" text="14.5 Программист редко лжет относительно\Nдвижения вехи, если веха очерчена резко, он\Nне может обманывать себя."></topic>
            <topic id="60" parent="0" guid="EFRPhRjuoWJuifSdMJKx8A" x="743.78" y="577.51" palette="6" colorinfo="6" text="Глава 3\NОперационная\Nбригада"></topic>
            <topic id="61" parent="60" x="1130.76" y="450.14" text="Успех при масштабировании обусловливается коренным\Nулучшением концептуального единства каждого участка, ведь\Nколичество проектировщиков уменьшилось в семь раз. Поэтому\Nможно привлечь к работе над задачей 200 человек, и\Nнеобходимость координации умственных усилий потребуется\Nвсего для 20 из них — хирургов."></topic>
            <topic id="62" parent="60" x="1177.14" y="569.41" text="Вывод прост: если над проектом работают 200\Nчеловек, включая менеджеров, являющихся\Nнаиболее знающими и опытными программистами,\Nувольте 175 бойцов, и пусть менеджеры снова\Nзаймутся программированием."></topic>
            <topic id="63" parent="0" guid="EBPXnA6jYlQys-4mM4MBOw" x="1064.76" y="1254.83" palette="7" colorinfo="7" text="Глава 5 Эффект\Nвторой системы"></topic>
            <topic id="64" parent="63" guid="Npm31QkRoZRE7CdGZlqSzg" x="1725.29" y="1164.42" text="Обычно разработчик парирует предложением\Nизменений в архитектуре. Часто он прав — реализация\Nкакой-нибудь малосущественной детали может\Nоказаться неожиданно дорогостоящей."></topic>
            <topic id="65" parent="0" guid="I6Avp3ibTi8i-OtKUMmcEA" x="65.24" y="-1653.46" palette="2" colorinfo="2" text="Эпилог Пятьдесят лет удивления,\Nвосхищения и радости"></topic>
            <topic id="66" parent="65" guid="TgenxR4XJqI8w9PkObPaXA" x="462.96" y="-1912.30" text="Область связанных с компьютерами знаний претерпела взрыв, как и\Nсоответствующая технология. Будучи аспирантом в середине 50-х, я\Nмог прочесть все журналы и труды конференций. Я мог оставаться на\Nсовременном уровне во всей научной дисциплине. Сегодня же мне в\Nмоей интеллектуальной жизни приходится с сожалением\Nрасставаться с интересами то в одной, то в другой подобласти,\Nпоскольку количество документов превысило всякую возможность\Nсправиться с ними. Масса интересов, масса замечательных\Nвозможностей для учебы, исследований, размышлений. Чудесное\Nзатруднение! Не только конца не видно, но и шаг не замедляется. В\Nбудущем нас ожидают многие радости."></topic>
            <topic id="67" parent="0" guid="bfn8awfKhXc9T9XwQYczYQ" x="-623.16" y="-1867.50" palette="3" colorinfo="3" text="Глава 19 «Мифический\Nчеловеко-месяц» двадцать лет"></topic>
            <topic id="68" parent="67" x="-1062.21" y="-2677.63" text="Отделение архитектуры от разработки и реализации. Чтобы сделать\Nвозможным осуществление архитектором своей главной задачи,\Nнеобходимо отделить архитектуру, т.е. определение продукта в\Nвосприятии пользователя, от его разработки. Архитектура и\Nразработка определяют четкую грань между разными частями\Nзадачи проектирования, и по каждую сторону этой грани лежит\Nбольшая работа."></topic>
            <topic id="69" parent="67" guid="OyWgYReonb8vt8agDFjjEw" x="-35.39" y="-2797.11" text="Последующие исследования подкрепили мою уверенность. Модель\NCOCOMO Бёма признает, что качество команды является важнейшим\Nфактором ее успеха, практически вчетверо более важным, чем\Nследующий за ним по значимости. Большинство научных\Nисследований по программной инженерии сосредоточилось на\Nинструментах. Я люблю хороший инструмент и жажду его. Тем не\Nменее отрадно видеть продолжение исследовательских программ в\Nотношении заботы о людях, их роста и поддержки, а также развития\Nуправления разработкой программного обеспечения."></topic>
            <topic id="70" parent="67" guid="YbBANGliAbxQYP5OL7fn-Q" x="-636.56" y="-2593.04" text="Наибольшую ценность представляют его многочисленные\Nпрактические советы о том, как привлекать новых работников,\Nобучать их, обеспечивать инструментарием и т.д., чтобы\Nминимизировать отрицательный эффект увеличения персонала.\NОсобенно достойно внимания его замечание, что дополнительно\Nпривлекаемые на поздних стадиях проекта работники должны быть\Nигроками команды, стремящимися войти в игру и вписаться в\Nпроцесс, а не пытаться изменить или усовершенствовать сам\Nпроцесс!"></topic>
            <topic id="71" parent="67" guid="B3koXw0k0jNpa8JVGIUOsQ" x="-88.59" y="-2418.31" text="Как объясняется в главе 16, аномалия состоит не в замедленном\Nразвитии программирования, а в беспрецедентном в истории\Nчеловечества взрыве компьютерных технологий. В целом, причина\Nэтого в постепенном переходе производства компьютеров из\Nсборочного производства в обрабатывающее, из трудоемкого\Nпроизводства в капиталоемкое. Разработка же аппаратного и\Nпрограммного обеспечения, в отличие от производства, остается по\Nсвоей сути трудоемкой."></topic>
            <topic id="72" parent="67" guid="VxkHRReEIAARjohdAOHGMA" x="-1068.55" y="-2396.17" text="Этот взгляд резко противоречит мнению Дэвида Парнаса о том, что\Nпрограммные модули должны быть инкапсулированы, с хорошо\Nопределенными интерфейсами, а внутренность таких модулей должна\Nбыть частной собственностью программиста, невидимой снаружи.\NПрограммисты эффективнее всего работают, будучи ограждены от\Nвнутренностей чужих модулей. [13] В главе 7 я заклеймил идею Парнаса\Nкак «рецепт катастрофы». Парнас был прав, а я ошибался. Сегодня я\Nубежден, что ограничение информации, часто осуществляемое теперь\Nметодами объектного программирования, является единственным\Nспособом поднять уровень программных разработок."></topic>
            <topic id="73" parent="67" guid="akkZIC1r_mcZPULdTj4dXg" x="-788.33" y="-2101.26" text="Возможно, он прав в том, что эта область никогда не станет\Nинженерной дисциплиной с такой точной и всеохватывающей\Nосновой, какая есть у электротехники. В конце концов,\Nпрограммная инженерия, подобно химической технологии, занята\Nнелинейными задачами увеличения масштабов до\Nпромышленных процессов и, подобно организации\Nпромышленного производства, постоянно ставится в тупик\Nсложностями человеческого поведения."></topic>
            <topic id="74" parent="67" guid="UccuWWjTeSoECfleH3F5zw" x="-201.29" y="-2138.79" text="Сейчас блоки, создаваемые метапрограммистом,\Nзначительно больше, чем тогдашние макроопределения.\NТакое развитие вторичного рынка очень обнадеживает:\Nпока мы ждали возникновения активного рынка классов\NC++, незаметно возник рынок метапрограмм\Nмногократного использования."></topic>
            <topic id="75" parent="0" guid="Do3IZSEMI3BmgP-BPi-AJw" x="-2220.89" y="-239.84" palette="4" colorinfo="4" text="Глава 16 Серебряной пули нет —\Nсущность и акциденция в\Nпрограммной инженерии"></topic>
            <topic id="76" parent="75" x="-2652.04" y="-881.49" text="Предельный вклад, вносимый разделением времени,\Nопределяется непосредственно. Главное — это сократить\Nвремя отклика системы. По мере приближения его к нулю, оно\Nпереходит порог скорости человеческого восприятия,\Nсоставляющей около 100 миллисекунд. Дальше никакой\Nвыгоды получить уже нельзя."></topic>
            <topic id="77" parent="75" x="-2664.48" y="-745.76" text="Отчасти это происходит потому, что программное обеспечение в\Nсистеме воплощает ее назначение, а назначение более всего\Nощущает влияние изменений. Отчасти это происходит потому, что\Nпрограммное обеспечение легче изменить: это чистая мысль,\Nбесконечно податливая. Здания тоже перестраиваются, но\Nпризнаваемая всеми высокая стоимость изменений умеряет\Nкапризы новаторов."></topic>
            <topic id="78" parent="75" x="-2661.81" y="-593.58" text="Серебряных пуль не только не видно в настоящее время, но в\Nсилу самой природы программного обеспечения маловероятно,\Nчто они вообще будут найдены — не будет изобретений,\Nспособных повлиять на продуктивность создания, надежность и\Nпростоту программного обеспечения так, как электроника,\Nтранзисторы и интегральные схемы — на аппаратное\Nобеспечение компьютеров. Не следует ожидать, что когда-либо в\Nбудущем каждые два года будет происходить двукратный рост."></topic>
            <topic id="79" parent="75" x="-2690.61" y="-416.71" text="Резко изменилось соотношение стоимости компьютеров и программ. Тот,\Nкто в 1960 году покупал машину за 2 миллиона долларов, считал, что\Nможет позволить себе потратить еще 250 000 долларов на заказную\Nпрограмму расчета зарплаты, которая легко и без ущерба вписалась бы\Nво враждебную компьютерам социальную среду. Те, кто сегодня\Nпокупают машину для офиса за 50 000 долларов, не могут, понятно,\Nпозволить себе заказные программы расчета зарплаты, поэтому они\Nприспосабливают свои процедуры расчета зарплаты к имеющимся\Nпакетам. Компьютеры сейчас столь обычны, если не столь любимы, что\Nадаптация воспринимается как обычное дело."></topic>
            <topic id="80" parent="75" x="-2646.37" y="-264.53" text="Нет ни одного открытия ни в технологии, ни в методах\Nуправления, одно только использование которого обещало\Nбы в течение ближайшего десятилетия на порядок повысить\Nпроизводительность, надежность, простоту разработки\Nпрограммного обеспечения."></topic>
            <topic id="81" parent="75" x="-2595.98" y="-161.72" text="Возможно, большим достижением является не\Nязык Ada, а философия Ada как философия\Nмодульности, абстрактных типов данных,\Nиерархического структурирования."></topic>
            <topic id="82" parent="75" x="-2675.81" y="-34.22" text="Воздействие на моральный дух ошеломительное. Когда есть хотя\Nбы простая работающая система, возрастает энтузиазм. Энергия\Nудваивается, когда на экране появляется картинка из новой\Nграфической программной системы, даже если это всего лишь\Nпрямоугольник. И на каждой стадии процесса разработки существует\Nработающая система. Я считаю, что за одинаковые сроки команда\Nможет нарастить значительно более сложный объект, чем\Nпостроить."></topic>
            <topic id="83" parent="75" x="-2691.80" y="150.88" text="Выбор правильного метода проектирования определяет различия между\Nплохим и хорошим концептуальным проектом, но не между хорошим и\Nвыдающимся. Выдающиеся проекты создаются выдающимися\Nпроектировщиками. Создание программ является творческим процессом.\NКрепкая методология может придать силу и освободить творческий ум,\Nно она не может воспламенить или вдохновить того, кто занят нудной\Nработой. И разница немалая — это как Сальери и Моцарт. Одно\Nисследование за другим показывают, что лучшие проектировщики\Nсоздают структуры, которые быстрее, меньше по размеру, проще,\Nпонятнее и разработаны меньшими усилиями. Различия между\Nвыдающимся и средним достигают порядка величины."></topic>
            <topic id="84" parent="75" x="-2681.46" y="360.66" text="Так же должны создаваться наши программные системы. Несколько\Nлет назад Харлан Миллз предложил наращивать программные\Nсистемы путем пошаговой разработки. [11] Это значит, что сначала\Nсистему надо заставить выполняться, даже если при этом она не\Nделает ничего полезного, кроме вызова некоторого числа фиктивных\Nподпрограмм. Затем она понемногу обрастает мясом, причем\Nподпрограммы, в свою очередь, разрабатываются сначала как\Nвызовы пустых фиктивных подпрограмм, находящихся на уровень\Nниже. Настаивая на применении этой технологии разработчиками\Nпроектов на моих лабораторных занятиях по программной инженерии,\Nя стал свидетелем поразительных результатов."></topic>
            <topic id="85" parent="0" guid="L6G3wgaDpABfTJXWfeqLFg" x="811.35" y="2128.40" palette="5" colorinfo="5" text="Глава 7 Почему не удалось\Nпостроить Вавилонскую башню?"></topic>
            <topic id="86" parent="85" guid="OtZpAg6-M-lsg2-nZam9jA" x="1390.01" y="2189.37" text="А что же технический директор? Он постигает проект, который должен\Nбыть реализован, выявляет его составляющие, определяет, как он будет\Nвыглядеть внешне, и делает эскиз внутренней структуры. Он\Nобеспечивает единство и концептуальную целостность проекта в целом\Nи таким образом способствует ограничению сложности системы. При\Nвозникновении технических проблем он изыскивает их решения или при\Nнеобходимости изменяет системный проект. Он, согласно прелестному\Nвыражению Ала Каппа, является «своим человеком в паршивых делах».\NОбщение его происходит преимущественно внутри команды. Его работа\Nпочти исключительно техническая."></topic>
            <topic id="87" parent="85" guid="SKf73kCmzKUg0WGaG4BlNQ" x="1452.73" y="2380.43" text="Например, исполнитель функции, осуществляющей оверлейную\Nзагрузку программ, может столкнуться с проблемами и снизить\Nбыстродействие, основываясь на статистических данных,\Nуказывающих на редкость использования этой функции в прикладных\Nпрограммах. В то же время его сосед может разрабатывать важную\Nчасть супервизора таким образом, что она крайне зависит от скорости\Nвыполнения этой функции. Это изменение скорости выполнения, в\Nсущности, становится значительным изменением спецификаций, о нем\Nнужно широко объявить и оценить с точки зрения системы."></topic>
            <topic id="88" parent="0" guid="FKuQD2UFvzJ9z7y3F-gFfw" x="670.48" y="2497.30" palette="6" colorinfo="6" text="Глава 8\NОбъявляя\Nудар"></topic>
            <topic id="89" parent="88" guid="A1QeQQyLt5l-bKYpVKTSMA" x="1003.09" y="2639.66" text="Обратите внимание, что все четыре программы приблизительно одного\Nразмера, различие состоит в размере рабочих групп, продолжительности\Nработы и количестве модулей. Что является причиной, а что —\Nследствием? Была ли сложность причиной того, что для управляющих\Nпрограмм требовалось больше людей? Или же большее число модулей и\Nчеловеко-месяцев обусловлено большим числом людей, привлеченных к\Nработе? Была ли большая продолжительность выполнения вызвана\Nсложностью проблем или многочисленностью занятых людей? Трудно\Nсказать с уверенностью. Конечно, управляющие программы были более\Nсложными. Если оставить в стороне эти неопределенности, то цифры\Nописывают реальную производительность при создании больших систем,\Nи потому представляют ценность."></topic>
            <topic id="90" parent="88" guid="Kvn7vhTb6Flcjz31Unnhdw" x="1763.30" y="2655.54" text="Из них выяснилось, что ошибка оценок полностью объясняется тем,\Nчто его команды использовали на программирование и отладку лишь\N50 процентов рабочего времени. Остальное время терялось из-за\Nотказов машины, на небольшие срочные посторонние задания,\Nсовещания, писание бумаг, дела фирмы, болезни, личное время и т.д.\NКороче оценки исходили из нереалистичного предположения о том,\Nкакая часть рабочего времени отводится непосредственно работе.["></topic>
            <topic id="91" parent="88" guid="cDdRzkrUPIgWuPIjY2879g" x="1464.22" y="2819.85" text="Опыт — дорогой учитель, но для глупцов иного нет. АЛЬМАНАХ\NБЕДНОГО РИЧАРДСА (Бедный Ричард — образ необразованного,\Nно здравомыслящего доморощенного философа, созданный\NБенджамином Франклином, издававшим в 1732 — 1757 годах\Nежегодный альманах и использовавшим этот псевдоним\N(примеч. перев.))."></topic>
            <topic id="92" parent="88" guid="ctTYiQQABU9kbOuGeLu4qQ" x="1574.29" y="2972.33" text="Объем работы = (константа) Ч\N(количество команд) ^ 1.5."></topic>
            <topic id="93" parent="0" guid="f8RfMTCnhEYmpwlUWPba6A" x="991.27" y="957.35" palette="7" colorinfo="7" text="Глава 4 Аристократия, демократия и\Nсистемное проектирование"></topic>
            <topic id="94" parent="93" guid="czfqJygAnAFtRxMsAP2vkA" x="1566.63" y="706.72" text="Не стали ли архитекторы новой аристократией, интеллектуальной\Nэлитой, призванной разъяснить бедным безгласным исполнителям,\Nчто они должны делать? Не захватила ли эта элита всю творческую\Nдеятельность, сделав исполнителей лишь зубчиками в механизме?\NНе окажется ли, что более совершенный продукт можно получить,\Nиспользуя идеи всей бригады и исповедуя философию демократии,\Nа не ограничивая круг разработчиков несколькими лицами?"></topic>
            <topic id="95" parent="93" guid="BebgH2esLUcOh9QpFHSohA" x="1474.82" y="841.12" text="Как отмечает Блау, всю программу создания\Nсоставляют три отдельные стадии: архитектура,\Nразработка и реализация. Оказывается, что на\Nпрактике их можно начинать параллельно и\Nпродолжать одновременно."></topic>
            <topic id="96" parent="93" guid="CLhQt3UI06tSpCirMEgYJw" x="1452.93" y="976.50" text="Архитектура и разработка должны быть тщательно\Nразделены. Как сказал Блау (Blaauw), «архитектура\Nговорит, что должно произойти, а разработка — как\Nсделать, чтобы это произошло».["></topic>
            <topic id="97" parent="0" guid="J4_HcEXNlVc8Ggs9PDtXfw" x="-1805.51" y="2166.64" palette="2" colorinfo="2" text="Глава 11\NПланируйте на\Nвыброс"></topic>
            <topic id="98" parent="97" x="-2185.43" y="1983.62" text="Вот ключ к пониманию истории. Высвобождается огромная энергия,\Nвозникают цивилизации, создаются прекрасные учреждения, но\Nвсякий раз что-то происходит не так. Какая-то роковая ошибка\Nвозносит на вершину себялюбивых и жестоких людей, и все\Nскатывается назад, в нищету и руины. Действительно, машина\Nглохнет. Она нормально стартует и проезжает несколько метров, а\Nзатем ломается."></topic>
            <topic id="99" parent="97" x="-2173.55" y="2127.58" text="После уяснения того, что опытную систему нужно создавать, а\Nпотом выбросить, и что перепроектирование с новыми идеями\Nнеизбежно, полезно обратиться лицом к изменению как явлению\Nприроды. Первый шаг — признание того, что изменение — это\Nобраз жизни, а не постороннее и досадное исключение. Косгроув\Nмудро указал, что программист поставляет удовлетворение\Nпотребности пользователя, а не какой-то осязаемый продукт."></topic>
            <topic id="100" parent="97" x="-2143.61" y="2263.30" text="Косгроув рекомендует ко всем планам, вехам и\Nграфикам относиться как к пробам, чтобы облегчить\Nизменения. Здесь он заходит слишком далеко — сегодня\Nгруппы программистов терпят неудачи обычно из-за\Nслишком слабого, а не слишком сильного\Nадминистративного контроля."></topic>
            <topic id="101" parent="97" x="-2155.55" y="2374.34" text="Разумно взять метод и испытать его. При неудаче честно\Nпризнайтесь в этом и попробуйте другой метод. Но главное,\Nделайте что-нибудь. ФРАНКЛИН Д. РУЗВЕЛЬТ Опытные\Nзаводы и масштабирование"></topic>
        </topics>
        <relations></relations>
    </mindmap>
</simplemind-mindmaps>